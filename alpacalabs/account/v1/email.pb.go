// Code generated by protoc-gen-go. DO NOT EDIT.
// source: alpacalabs/account/v1/email.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EmailAddress struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastModifiedAt       *timestamp.Timestamp `protobuf:"bytes,3,opt,name=last_modified_at,json=lastModifiedAt,proto3" json:"last_modified_at,omitempty"`
	Deleted              bool                 `protobuf:"varint,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	DeletedAt            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	Confirmed            bool                 `protobuf:"varint,6,opt,name=confirmed,proto3" json:"confirmed,omitempty"`
	Primary              bool                 `protobuf:"varint,7,opt,name=primary,proto3" json:"primary,omitempty"`
	EmailAddress         string               `protobuf:"bytes,8,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	AccountId            string               `protobuf:"bytes,9,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *EmailAddress) Reset()         { *m = EmailAddress{} }
func (m *EmailAddress) String() string { return proto.CompactTextString(m) }
func (*EmailAddress) ProtoMessage()    {}
func (*EmailAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_213f744adedd0111, []int{0}
}

func (m *EmailAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmailAddress.Unmarshal(m, b)
}
func (m *EmailAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmailAddress.Marshal(b, m, deterministic)
}
func (m *EmailAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailAddress.Merge(m, src)
}
func (m *EmailAddress) XXX_Size() int {
	return xxx_messageInfo_EmailAddress.Size(m)
}
func (m *EmailAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailAddress.DiscardUnknown(m)
}

var xxx_messageInfo_EmailAddress proto.InternalMessageInfo

func (m *EmailAddress) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *EmailAddress) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *EmailAddress) GetLastModifiedAt() *timestamp.Timestamp {
	if m != nil {
		return m.LastModifiedAt
	}
	return nil
}

func (m *EmailAddress) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

func (m *EmailAddress) GetDeletedAt() *timestamp.Timestamp {
	if m != nil {
		return m.DeletedAt
	}
	return nil
}

func (m *EmailAddress) GetConfirmed() bool {
	if m != nil {
		return m.Confirmed
	}
	return false
}

func (m *EmailAddress) GetPrimary() bool {
	if m != nil {
		return m.Primary
	}
	return false
}

func (m *EmailAddress) GetEmailAddress() string {
	if m != nil {
		return m.EmailAddress
	}
	return ""
}

func (m *EmailAddress) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func init() {
	proto.RegisterType((*EmailAddress)(nil), "alpacalabs.account.v1.EmailAddress")
}

func init() { proto.RegisterFile("alpacalabs/account/v1/email.proto", fileDescriptor_213f744adedd0111) }

var fileDescriptor_213f744adedd0111 = []byte{
	// 369 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xc1, 0x4a, 0x2b, 0x31,
	0x14, 0x86, 0x99, 0xe9, 0xbd, 0x6d, 0x27, 0xb7, 0xb7, 0xc8, 0x40, 0x21, 0x16, 0xc5, 0xaa, 0x9b,
	0x6e, 0x9a, 0x61, 0x74, 0xe5, 0xce, 0x14, 0x5d, 0x08, 0x15, 0x4a, 0x91, 0x2e, 0xa4, 0x30, 0x64,
	0x26, 0xe9, 0x18, 0x98, 0x34, 0x43, 0x26, 0x2d, 0xf8, 0x3a, 0xba, 0xf3, 0x51, 0x7c, 0x1a, 0x1f,
	0x41, 0x92, 0x49, 0x69, 0x17, 0x85, 0xee, 0x92, 0xc3, 0xff, 0x7f, 0xe7, 0xe4, 0xcf, 0x01, 0x97,
	0xa4, 0x28, 0x49, 0x46, 0x0a, 0x92, 0x56, 0x11, 0xc9, 0x32, 0xb9, 0x5e, 0xe9, 0x68, 0x13, 0x47,
	0x4c, 0x10, 0x5e, 0xa0, 0x52, 0x49, 0x2d, 0xc3, 0xde, 0x4e, 0x82, 0x9c, 0x04, 0x6d, 0xe2, 0xfe,
	0x45, 0x2e, 0x65, 0x5e, 0xb0, 0xc8, 0x8a, 0xd2, 0xf5, 0x32, 0xd2, 0x5c, 0xb0, 0x4a, 0x13, 0x51,
	0xd6, 0xbe, 0xab, 0x1f, 0x1f, 0x74, 0x1e, 0x0d, 0x07, 0x53, 0xaa, 0x58, 0x55, 0x85, 0x5d, 0xe0,
	0x73, 0x0a, 0xbd, 0x81, 0x37, 0x0c, 0x66, 0x3e, 0xa7, 0xe1, 0x1d, 0x00, 0x99, 0x62, 0x44, 0x33,
	0x9a, 0x10, 0x0d, 0xfd, 0x81, 0x37, 0xfc, 0x77, 0xd3, 0x47, 0x35, 0x16, 0x6d, 0xb1, 0xe8, 0x65,
	0x8b, 0x9d, 0x05, 0x4e, 0x8d, 0x75, 0xf8, 0x00, 0x4e, 0x0a, 0x52, 0xe9, 0x44, 0x48, 0xca, 0x97,
	0xbc, 0x06, 0x34, 0x8e, 0x02, 0xba, 0xc6, 0xf3, 0xec, 0x2c, 0x58, 0x87, 0x10, 0xb4, 0x28, 0x2b,
	0x98, 0x66, 0x14, 0xfe, 0x19, 0x78, 0xc3, 0xf6, 0x6c, 0x7b, 0x35, 0xa3, 0xb9, 0xa3, 0x21, 0xff,
	0x3d, 0x3e, 0x9a, 0x53, 0x63, 0x1d, 0x9e, 0x81, 0x20, 0x93, 0xab, 0x25, 0x57, 0x82, 0x51, 0xd8,
	0xb4, 0xd8, 0x5d, 0xc1, 0xb4, 0x2c, 0x15, 0x17, 0x44, 0xbd, 0xc3, 0x56, 0xdd, 0xd2, 0x5d, 0xc3,
	0x6b, 0xf0, 0xdf, 0xa6, 0x9e, 0x90, 0x3a, 0x2e, 0xd8, 0xb6, 0x41, 0x75, 0xd8, 0x7e, 0x84, 0xe7,
	0x00, 0xb8, 0x2f, 0x48, 0x38, 0x85, 0x81, 0x55, 0x04, 0xae, 0xf2, 0x44, 0xc7, 0x9f, 0x1e, 0x38,
	0xcd, 0xa4, 0x40, 0x07, 0x7f, 0x6c, 0xdc, 0xc1, 0xf5, 0x79, 0x6a, 0xe6, 0x9f, 0x7a, 0xaf, 0xf7,
	0x39, 0xd7, 0x6f, 0xeb, 0x14, 0x65, 0x52, 0x44, 0xd8, 0x3a, 0x26, 0x66, 0x0d, 0xec, 0xf3, 0x14,
	0x2b, 0xe5, 0xc8, 0x79, 0x47, 0xb9, 0x8c, 0x0e, 0xae, 0xc9, 0x87, 0xdf, 0xc0, 0x13, 0xfc, 0xe5,
	0xf7, 0x76, 0x6e, 0xe4, 0x7a, 0xa0, 0x79, 0xfc, 0xbd, 0x5f, 0x5f, 0xb8, 0xfa, 0x62, 0x1e, 0xa7,
	0x4d, 0xdb, 0xe1, 0xf6, 0x37, 0x00, 0x00, 0xff, 0xff, 0x60, 0x07, 0x13, 0xa0, 0x7c, 0x02, 0x00,
	0x00,
}
